Docker Doku: [ docs.docker.com/../.. ]
------------------------------------------------------------------------

--[ Login ]-------------------------------------------------------------
docker logout
docker login docker.io
username:
password:

--[ Pull Image ]---------------------------------------------------------
docker pull appuio/example-spring-boot
docker images
docker run --name java-spring -p 8080:8080 appuio/example-spring-boot

docker pull ubuntu
docker run --name ubuntu -it ubuntu

--[ Remove Image ]-------------------------------------------------------
docker rmi ubunu
docker rmi 723 
docker rmi 723 --force

--[ Start und Stop Container ]--------------------------------------------
docker ps 
docker ps --all
docker stop f65
docker start f65
docker rm f65
docker rm f65 --force

--[ Docker Run ]-----------------------------------------------------------
1. busybox: Docker Official Image
2. nginx (backend)

docker run [OPTIONS] Image:[TAG]
[OPTIONS]: --name -p -d -it -e

docker 
docker run --name nginx_1 -d -p 81:80 nginx 
/usr/share/nginx/html

docker run --name mysql -p 8081:3306 mysql
docker run --name mysql -p 8081:3306 -d -e MYSQL_ROOT_PASSWORD=12345 mysql
docker run --name mysql -p 8081:3306 -d -e MYSQL_ALLOW_EMPTY_PASSWORD=true mysql

--[ Docker File ]----------------------------------------------------------
FROM nginx
COPY index.html /usr/share/nginx/html
EXPOSE 80

docker build -t myfirstapp -f Dockerfile
docker build -t myfirstapp .

docker tag myfirstapp hicherraj/myfirstapp:1.0
docker push hicherraj/myfirstapp:1.0

FROM openjdk
COPY target/*.jar app.jar
EXPOSE 8080
CMD ["java","-jar","/app,jar"]

FROM openjdk
ARG JAR_FILE=target/*.jar
COPY ${JAR_FILE} app.jar
ENV AUTHOR.NAME Docker
EXPOSE 8080
CMD ["java","-jar","/app,jar"]

docker run --name=sp -p 8082:8080 -d -e AUTHOR.NAME=DevOPs sp
docker run --name sp -p 8082:8080 sp -d java -jar app.jar

--[ Volume and Bind Mount ]--------------------------------------------------
docker run --name mysql -v "$pwd/mysqlData":/var/lib/mysql -p 3306:3306 -d -e MYSQL_ALLOW_EMPTY_PASSWORD=true mysql
docker rm mysql --force
docker run --name mysql -v "$pwd/mysqlData":/var/lib/mysql -p 3306:3306 mysql
docker inspect mysql

docker run --name mysql -v mysqlvolume:/var/lib/mysql -p 3307:3306 -d -e MYSQL_ALLOW_EMPTY_PASSWORD=true mysql
docker volume ls
docker inspect mysql

--[ Exec (in Container) ]-----------------------------------------------------
docker exec -it nginx bin/bash
cd usr/share/nginx/html
echo "Hello from our docker Course" > index.html
docker commit nginx mynginx

docker tag mynginx hicherraj/mynginx 
docker push hicherraj/mynginx

docker logs nginx



